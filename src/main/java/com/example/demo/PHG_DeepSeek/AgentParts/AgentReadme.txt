[전체 시스템 동작 흐름]
    시작점: 사용자 요청
    - 사용자가 시스템에 질문이나 요청을 하면, 마치 카카오톡 대화하듯이 시스템이 응답을 시작합니다.

[주요 처리 단계]
    1. 사용자 입력 처리
        - AgentService가 먼저 사용자의 메시지를 받아들입니다
        - 마치 우체국의 우편물 분류처럼, 입력된 내용을 분석하고 적절한 처리 방법을 결정합니다
    2. 정보 수집 단계
        - ProjectLoader가 필요한 정보들을 컴퓨터에서 찾아옵니다
        - 마치 도서관에서 책을 찾는 것처럼, 관련된 파일과 데이터를 수집합니다
    3. 데이터베이스 작업
        - DatabaseManager가 필요한 정보를 데이터베이스에서 가져옵니다
        - 이는 마치 큰 창고에서 필요한 물건을 찾아오는 것과 비슷합니다
    4. AI 처리 과정
        - OllamaService가 AI 엔진을 사용해 실제 답변을 만듭니다
        - 마치 전문가가 수집된 정보를 바탕으로 답변을 작성하는 것과 같습니다
    5. 학습 및 개선
        - DRLAIntegrator가 시스템의 응답을 지속적으로 개선합니다
        - 마치 선생님이 학생의 답변을 보고 피드백을 주는 것처럼 작동합니다
    6. 기록 관리
        - HistoryManager가 모든 대화 내용을 저장하고 관리합니다
        - 마치 일기장에 하루 일과를 기록하는 것과 비슷합니다

[실제 동작 예시]
    사용자: "프로젝트의 버그를 찾아줘"라고 요청

    시스템 처리 과정:
        - AgentService가 이 요청을 받아들임
        - ProjectLoader가 프로젝트 파일들을 검사
        - DatabaseManager가 이전 버그 기록을 확인
        - OllamaService가 AI를 통해 버그 분석
        - 최종적으로 사용자에게 답변 제공
    동시에:
        - HistoryManager가 이 모든 과정을 기록
        - DRLAIntegrator가 응답의 품질을 평가하고 개선점 학습

[특별한 기능들]
    자동 학습 기능
        - 시스템이 사용자와의 대화를 통해 계속 똑똑해집니다
        - 마치 사람이 경험을 통해 배우는 것처럼 작동합니다
    오류 처리
        - 문제가 발생해도 시스템이 안전하게 작동합니다
        - 마치 자동차의 에어백처럼 보호 장치가 있습니다
    데이터 보호
        - 모든 정보는 안전하게 보관되고 관리됩니다
        - 마치 금고에 중요한 물건을 보관하는 것과 같습니다

이 모든 부분들이 하나의 큰 시스템으로 조화롭게 작동하면서, 사용자의 요청에 대해 신속하고 정확한 응답을 제공합니다.